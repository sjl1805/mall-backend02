<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.CartMapper">

    <resultMap id="BaseResultMap" type="com.example.model.entity.Cart">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="userId" column="user_id" jdbcType="BIGINT"/>
        <result property="productId" column="product_id" jdbcType="BIGINT"/>
        <result property="quantity" column="quantity" jdbcType="INTEGER"/>
        <result property="checked" column="checked" jdbcType="TINYINT"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,user_id,product_id,
        quantity,checked,create_time,
        update_time
    </sql>

    <!-- 根据用户ID查询购物车商品 -->
    <select id="selectByUserId" resultMap="BaseResultMap">
        SELECT *
        FROM cart
        WHERE user_id = #{userId}
    </select>

    <!-- 分页查询购物车商品 -->
    <select id="selectPage" resultMap="BaseResultMap">
        SELECT *
        FROM cart
        WHERE user_id = #{userId}
        ORDER BY create_time DESC
    </select>

    <!-- 根据ID查询购物车商品 -->
    <select id="selectById" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM cart
        WHERE id = #{id}
    </select>

    <!-- 根据用户ID和商品ID查询购物车商品 -->
    <select id="selectByUserIdAndProductId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM cart
        WHERE user_id = #{userId}
        AND product_id = #{productId}
    </select>

    <!-- 插入新购物车商品（处理唯一约束） -->
    <insert id="insertOrUpdateCart" parameterType="com.example.model.entity.Cart">
        INSERT INTO cart (user_id, product_id, quantity, checked, create_time, update_time)
        VALUES (#{userId}, #{productId}, #{quantity}, #{checked}, NOW(), NOW())
        ON DUPLICATE KEY UPDATE quantity    = quantity + #{quantity},
                                checked     = #{checked},
                                update_time = NOW()
    </insert>

    <!-- 更新购物车商品信息 -->
    <update id="updateCart" parameterType="com.example.model.entity.Cart">
        UPDATE cart
        SET quantity    = #{quantity},
            checked     = #{checked},
            update_time = NOW()
        WHERE id = #{id}
    </update>

    <!-- 根据ID删除购物车商品 -->
    <delete id="deleteCart">
        DELETE
        FROM cart
        WHERE id = #{id}
    </delete>

    <!-- 查询购物车商品详情（增加商品状态过滤） -->
    <select id="selectCartDetail" resultType="java.util.Map">
        SELECT c.*,
               p.name                 as product_name,
               p.price                as product_price,
               p.stock                as product_stock,
               p.images               as product_images,
               p.status               as product_status,
               (p.price * c.quantity) as total_price
        FROM cart c
                 LEFT JOIN products p ON c.product_id = p.id
        WHERE c.user_id = #{userId}
        ORDER BY c.create_time DESC
    </select>

    <!-- 更新购物车商品数量 -->
    <update id="updateQuantity">
        UPDATE cart
        SET quantity    = #{quantity},
            update_time = NOW()
        WHERE id = #{id}
    </update>

    <!-- 更新购物车商品勾选状态 -->
    <update id="updateChecked">
        UPDATE cart
        SET checked     = #{checked},
            update_time = NOW()
        WHERE id = #{id}
    </update>

    <!-- 批量更新购物车商品勾选状态 -->
    <update id="updateCheckedByUserId">
        UPDATE cart
        SET checked     = #{checked},
            update_time = NOW()
        WHERE user_id = #{userId}
    </update>

    <!-- 批量更新购物车商品勾选状态 -->
    <update id="batchUpdateChecked">
        UPDATE cart
        SET checked = #{checked},
        update_time = NOW()
        WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        AND user_id = #{userId}
    </update>

    <!-- 清空用户购物车 -->
    <delete id="deleteByUserId">
        DELETE
        FROM cart
        WHERE user_id = #{userId}
    </delete>

    <!-- 删除用户勾选的购物车商品 -->
    <delete id="deleteCheckedByUserId">
        DELETE
        FROM cart
        WHERE user_id = #{userId}
          AND checked = 1
    </delete>

    <!-- 查询用户勾选的购物车商品 -->
    <select id="selectCheckedByUserId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM cart
        WHERE user_id = #{userId}
        AND checked = 1
    </select>

    <!-- 查询用户勾选的购物车商品详情 -->
    <select id="selectCheckedCartDetail" resultType="java.util.Map">
        SELECT c.*,
               p.name                 as product_name,
               p.price                as product_price,
               p.stock                as product_stock,
               p.images               as product_images,
               (p.price * c.quantity) as total_price
        FROM cart c
                 LEFT JOIN products p ON c.product_id = p.id
        WHERE c.user_id = #{userId}
          AND c.checked = 1
        ORDER BY c.create_time DESC
    </select>

    <!-- 批量删除购物车商品 -->
    <delete id="batchDelete">
        DELETE FROM cart
        WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <!-- 统计用户购物车商品数量 -->
    <select id="countByUserId" resultType="int">
        SELECT COUNT(*)
        FROM cart
        WHERE user_id = #{userId}
    </select>
</mapper>
