<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.ProductsMapper">

    <resultMap id="BaseResultMap" type="com.example.model.entity.Products">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="categoryId" column="category_id" jdbcType="BIGINT"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="description" column="description" jdbcType="VARCHAR"/>
        <result property="price" column="price" jdbcType="DECIMAL"/>
        <result property="stock" column="stock" jdbcType="INTEGER"/>
        <result property="images" column="images" jdbcType="OTHER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="status" column="status" jdbcType="TINYINT"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,category_id,name,
        description,price,stock,
        images,create_time,update_time,
        status
    </sql>

    <!-- 根据商品名称模糊查询 -->
    <select id="selectByNameLike" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM products
        WHERE name LIKE CONCAT('%', #{name}, '%')
        AND status = 1
        ORDER BY create_time DESC
    </select>

    <!-- 分页查询商品 -->
    <select id="selectPage" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM products
        WHERE status = 1
        ORDER BY create_time DESC
    </select>

    <!-- 根据ID查询商品 -->
    <select id="selectById" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM products
        WHERE id = #{id}
    </select>

    <!-- 根据商品名称查询商品 -->
    <select id="selectByName" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM products
        WHERE name = #{name}
        AND status = 1
    </select>

    <!-- 插入新商品 -->
    <insert id="insertProduct" parameterType="com.example.model.entity.Products">
        INSERT INTO products (category_id, name, description, price, stock, images, create_time, update_time, status)
        VALUES (#{categoryId}, #{name}, #{description}, #{price}, #{stock}, #{images}, NOW(), NOW(), #{status})
    </insert>

    <!-- 更新商品信息 -->
    <update id="updateProduct" parameterType="com.example.model.entity.Products">
        UPDATE products
        SET category_id = #{categoryId},
            name        = #{name},
            description = #{description},
            price       = #{price},
            stock       = #{stock},
            images      = #{images},
            update_time = NOW(),
            status      = #{status}
        WHERE id = #{id}
    </update>

    <!-- 根据ID删除商品 -->
    <delete id="deleteProduct">
        DELETE
        FROM products
        WHERE id = #{id}
    </delete>

    <!-- 根据分类ID查询商品 -->
    <select id="selectByCategoryId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM products
        WHERE category_id = #{categoryId}
        AND status = 1
        ORDER BY create_time DESC
    </select>

    <!-- 根据价格范围查询商品 -->
    <select id="selectByPriceRange" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM products
        WHERE price BETWEEN #{minPrice} AND #{maxPrice}
        AND status = 1
        ORDER BY price ASC
    </select>

    <!-- 根据状态查询商品 -->
    <select id="selectByStatus" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM products
        WHERE status = #{status}
        ORDER BY create_time DESC
    </select>

    <!-- 查询热门商品 -->
    <select id="selectHotProducts" resultMap="BaseResultMap">
        SELECT p.*
        FROM products p
        JOIN (
            SELECT product_id, COUNT(*) as count
            FROM order_item
            GROUP BY product_id
            ORDER BY count DESC
            LIMIT #{limit}
        ) hot ON p.id = hot.product_id
        WHERE p.status = 1
        ORDER BY hot.count DESC
    </select>

    <!-- 高级条件查询商品 -->
    <select id="selectProductsByCondition" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM products
        <where>
            <if test="categoryId != null">
                AND category_id = #{categoryId}
            </if>
            <if test="keyword != null and keyword != ''">
                AND name LIKE CONCAT('%', #{keyword}, '%')
            </if>
            <if test="minPrice != null">
                AND price >= #{minPrice}
            </if>
            <if test="maxPrice != null">
                AND price <= #{maxPrice}
            </if>
            <if test="status != null">
                AND status = #{status}
            </if>
        </where>
        ORDER BY create_time DESC
    </select>

    <!-- 批量插入商品 -->
    <insert id="batchInsertProducts">
        INSERT INTO products (category_id, name, description, price, stock, images, create_time, update_time, status)
        VALUES
        <foreach collection="productList" item="product" separator=",">
            (#{product.categoryId}, #{product.name}, #{product.description}, 
             #{product.price}, #{product.stock}, #{product.images}, 
             NOW(), NOW(), #{product.status})
        </foreach>
    </insert>

    <!-- 减少商品库存 -->
    <update id="decreaseStock">
        UPDATE products
        SET stock = stock - #{quantity},
            update_time = NOW()
        WHERE id = #{id}
        AND stock >= #{quantity}
    </update>
</mapper>
