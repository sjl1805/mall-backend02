<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.ProductReviewMapper">

    <resultMap id="BaseResultMap" type="com.example.model.entity.ProductReview">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="orderId" column="order_id" jdbcType="BIGINT"/>
        <result property="userId" column="user_id" jdbcType="BIGINT"/>
        <result property="productId" column="product_id" jdbcType="BIGINT"/>
        <result property="rating" column="rating" jdbcType="TINYINT"/>
        <result property="content" column="content" jdbcType="VARCHAR"/>
        <result property="images" column="images" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="TINYINT"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,order_id,user_id,
        product_id,rating,content,
        images,status,create_time,
        update_time
    </sql>

    <!-- 根据商品ID查询评价 -->
    <select id="selectByProductId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM product_review
        WHERE product_id = #{productId}
        AND status = 1
        ORDER BY create_time DESC
    </select>

    <!-- 分页查询商品评价 -->
    <select id="selectPage" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM product_review
        WHERE status = 1
        ORDER BY create_time DESC
    </select>

    <!-- 根据ID查询评价 -->
    <select id="selectById" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM product_review
        WHERE id = #{id}
    </select>

    <!-- 插入新评价 -->
    <insert id="insertProductReview" parameterType="com.example.model.entity.ProductReview">
        INSERT INTO product_review (order_id, user_id, product_id, rating, content, images, status, create_time,
                                    update_time)
        VALUES (#{orderId}, #{userId}, #{productId}, #{rating}, #{content}, #{images}, #{status}, NOW(),
                NOW())
    </insert>

    <!-- 更新评价信息 -->
    <update id="updateProductReview" parameterType="com.example.model.entity.ProductReview">
        UPDATE product_review
        SET order_id    = #{orderId},
            user_id     = #{userId},
            product_id  = #{productId},
            rating      = #{rating},
            content     = #{content},
            images      = #{images},
            status      = #{status},
            update_time = NOW()
        WHERE id = #{id}
    </update>

    <!-- 根据ID删除评价 -->
    <delete id="deleteProductReview">
        DELETE
        FROM product_review
        WHERE id = #{id}
    </delete>

    <!-- 计算商品平均评分 -->
    <select id="calculateAverageRating" resultType="Double">
        SELECT AVG(rating) as avg_rating
        FROM product_review
        WHERE product_id = #{productId}
        AND status = 1
    </select>

    <!-- 统计各评分数量 -->
    <select id="countByRating" resultType="java.util.Map">
        SELECT rating, COUNT(*) as count
        FROM product_review
        WHERE product_id = #{productId}
        AND status = 1
        GROUP BY rating
        ORDER BY rating DESC
    </select>

    <!-- 根据评分范围查询评价 -->
    <select id="selectByRatingRange" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM product_review
        WHERE product_id = #{productId}
        AND rating BETWEEN #{minRating} AND #{maxRating}
        AND status = 1
        ORDER BY create_time DESC
    </select>

    <!-- 查询用户所有评价 -->
    <select id="selectByUserId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM product_review
        WHERE user_id = #{userId}
        AND status = 1
        ORDER BY create_time DESC
    </select>

    <!-- 批量更新评价状态 -->
    <update id="batchUpdateStatus">
        UPDATE product_review
        SET status = #{status},
            update_time = NOW()
        WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <!-- 查询评价详情（含用户和商品信息） -->
    <select id="selectReviewDetail" resultMap="DetailResultMap">
        SELECT r.*, 
               u.nickname, u.avatar,
               p.name as product_name, p.images as product_image
        FROM product_review r
        LEFT JOIN users u ON r.user_id = u.id
        LEFT JOIN products p ON r.product_id = p.id
        WHERE r.id = #{id}
    </select>

    <!-- 详细评价结果映射 -->
    <resultMap id="DetailResultMap" type="com.example.model.entity.ProductReview" extends="BaseResultMap">
        <result property="nickname" column="nickname" jdbcType="VARCHAR"/>
        <result property="avatar" column="avatar" jdbcType="VARCHAR"/>
        <result property="productName" column="product_name" jdbcType="VARCHAR"/>
        <result property="productImage" column="product_image" jdbcType="VARCHAR"/>
    </resultMap>

    <!-- 查询待审核评价数量 -->
    <select id="countPendingReviews" resultType="int">
        SELECT COUNT(*)
        FROM product_review
        WHERE status = 0
    </select>

    <!-- 更新评价有用度 -->
    <update id="updateUsefulCount">
        UPDATE product_review_useful
        SET useful_count = useful_count + #{increment}
        WHERE review_id = #{id}
    </update>
</mapper>
