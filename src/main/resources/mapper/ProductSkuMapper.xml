<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.ProductSkuMapper">

    <resultMap id="BaseResultMap" type="com.example.model.entity.ProductSku">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="productId" column="product_id" jdbcType="BIGINT"/>
        <result property="specValues" column="spec_values" jdbcType="VARCHAR"/>
        <result property="price" column="price" jdbcType="DECIMAL"/>
        <result property="stock" column="stock" jdbcType="INTEGER"/>
        <result property="sales" column="sales" jdbcType="INTEGER"/>
        <result property="mainImage" column="main_image" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="TINYINT"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,product_id,spec_values,
        price,stock,sales,
        main_image,status,create_time,
        update_time
    </sql>

    <!-- 根据商品ID查询SKU -->
    <select id="selectByProductId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM product_sku
        WHERE product_id = #{productId}
    </select>

    <!-- 分页查询SKU -->
    <select id="selectPage" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM product_sku
        ORDER BY create_time DESC
    </select>

    <!-- 根据ID查询SKU -->
    <select id="selectById" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM product_sku
        WHERE id = #{id}
    </select>

    <!-- 插入新SKU -->
    <insert id="insertProductSku" parameterType="com.example.model.entity.ProductSku">
        INSERT INTO product_sku (product_id, spec_values, price, stock, sales, main_image, create_time, update_time,
                                 status)
        VALUES (#{productId}, #{specValues}, #{price}, #{stock}, #{sales}, #{mainImage}, NOW(), NOW(),
                #{status})
    </insert>

    <!-- 更新SKU信息 -->
    <update id="updateProductSku" parameterType="com.example.model.entity.ProductSku">
        UPDATE product_sku
        SET product_id  = #{productId},
            spec_values = #{specValues},
            price       = #{price},
            stock       = #{stock},
            sales       = #{sales},
            main_image  = #{mainImage},
            update_time = NOW(),
            status      = #{status}
        WHERE id = #{id}
    </update>

    <!-- 根据ID删除SKU -->
    <delete id="deleteProductSku">
        DELETE
        FROM product_sku
        WHERE id = #{id}
    </delete>

    <!-- 根据规格值精确匹配SKU -->
    <select id="selectBySpecValues" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM product_sku
        WHERE product_id = #{productId}
        AND spec_values = #{specValues}
        AND status = 1
    </select>

    <!-- 查询可售SKU（有库存且上架） -->
    <select id="selectAvailableSkus" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM product_sku
        WHERE product_id = #{productId}
        AND stock > 0
        AND status = 1
    </select>

    <!-- 减少SKU库存 -->
    <update id="decreaseStock">
        UPDATE product_sku
        SET stock = stock - #{quantity},
            update_time = NOW()
        WHERE id = #{id}
        AND stock >= #{quantity}
    </update>

    <!-- 增加SKU销量 -->
    <update id="increaseSales">
        UPDATE product_sku
        SET sales = sales + #{quantity},
            update_time = NOW()
        WHERE id = #{id}
    </update>

    <!-- 批量插入SKU -->
    <insert id="batchInsertSkus">
        INSERT INTO product_sku (product_id, spec_values, price, stock, sales, main_image, create_time, update_time, status)
        VALUES
        <foreach collection="skuList" item="sku" separator=",">
            (#{sku.productId}, #{sku.specValues}, #{sku.price}, #{sku.stock}, 
             #{sku.sales}, #{sku.mainImage}, NOW(), NOW(), #{sku.status})
        </foreach>
    </insert>

    <!-- 根据价格区间查询SKU -->
    <select id="selectByPriceRange" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM product_sku
        WHERE product_id = #{productId}
        AND price BETWEEN #{minPrice} AND #{maxPrice}
        AND status = 1
        ORDER BY price ASC
    </select>
</mapper>
