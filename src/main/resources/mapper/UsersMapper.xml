<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.UsersMapper">
    <resultMap id="BaseResultMap" type="com.example.model.entity.Users">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="nickname" property="nickname" jdbcType="VARCHAR"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="avatar" property="avatar" jdbcType="VARCHAR"/>
        <result column="gender" property="gender" jdbcType="TINYINT"/>
        <result column="status" property="status" jdbcType="TINYINT"/>
        <result column="role" property="role" jdbcType="TINYINT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,username,password,nickname,phone,email,avatar,gender,status,role,create_time,update_time
    </sql>

    <!-- 根据用户名模糊查询用户 -->
    <select id="selectByUsernameLike" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM users
        WHERE username LIKE CONCAT('%', #{username}, '%')
    </select>

    <!-- 分页查询用户 -->
    <select id="selectPage" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM users
    </select>

    <!-- 根据ID查询用户 -->
    <select id="selectById" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM users
        WHERE id = #{id}
    </select>

    <!-- 插入新用户 -->
    <insert id="insertUser" parameterType="com.example.model.entity.Users">
        INSERT INTO users (username, password, nickname, phone, email, avatar, gender, status, role, create_time,
                           update_time)
        VALUES (#{username}, #{password}, #{nickname}, #{phone}, #{email}, #{avatar}, #{gender}, #{status}, #{role},
                #{createTime}, #{updateTime})
    </insert>

    <!-- 更新用户信息 -->
    <update id="updateUser" parameterType="com.example.model.entity.Users">
        UPDATE users
        SET username    = #{username},
            password    = #{password},
            nickname    = #{nickname},
            phone       = #{phone},
            email       = #{email},
            avatar      = #{avatar},
            gender      = #{gender},
            status      = #{status},
            role        = #{role},
            update_time = #{updateTime}
        WHERE id = #{id}
    </update>

    <!-- 根据ID删除用户 -->
    <delete id="deleteUser">
        DELETE
        FROM users
        WHERE id = #{id}
    </delete>
</mapper> 