<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.ProductFavoriteMapper">

    <resultMap id="BaseResultMap" type="com.example.model.entity.ProductFavorite">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="userId" column="user_id" jdbcType="BIGINT"/>
        <result property="productId" column="product_id" jdbcType="BIGINT"/>
        <result property="folderId" column="folder_id" jdbcType="BIGINT"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,user_id,product_id,
        folder_id,create_time,update_time
    </sql>

    <!-- 根据用户ID查询收藏商品 -->
    <select id="selectByUserId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM product_favorite
        WHERE user_id = #{userId}
    </select>

    <!-- 分页查询用户收藏商品 -->
    <select id="selectPage" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM product_favorite
        ORDER BY create_time DESC
    </select>

    <!-- 根据ID查询收藏商品 -->
    <select id="selectById" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM product_favorite
        WHERE id = #{id}
    </select>

    <!-- 插入新收藏商品 -->
    <insert id="insertProductFavorite" parameterType="com.example.model.entity.ProductFavorite">
        INSERT INTO product_favorite (user_id, product_id, folder_id, create_time, update_time)
        VALUES (#{userId}, #{productId}, #{folderId}, NOW(), NOW())
    </insert>

    <!-- 更新收藏商品信息 -->
    <update id="updateProductFavorite" parameterType="com.example.model.entity.ProductFavorite">
        UPDATE product_favorite
        SET user_id     = #{userId},
            product_id  = #{productId},
            folder_id   = #{folderId},
            update_time = NOW()
        WHERE id = #{id}
    </update>

    <!-- 根据ID删除收藏商品 -->
    <delete id="deleteProductFavorite">
        DELETE
        FROM product_favorite
        WHERE id = #{id}
    </delete>

    <!-- 查询用户是否已收藏商品 -->
    <select id="checkFavorite" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM product_favorite
        WHERE user_id = #{userId}
        AND product_id = #{productId}
        LIMIT 1
    </select>

    <!-- 根据文件夹ID查询收藏商品 -->
    <select id="selectByFolder" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM product_favorite
        WHERE user_id = #{userId}
        <if test="folderId != null">
            AND folder_id = #{folderId}
        </if>
        <if test="folderId == null">
            AND (folder_id IS NULL OR folder_id = 0)
        </if>
        ORDER BY create_time DESC
    </select>

    <!-- 查询热门收藏商品 -->
    <select id="selectHotFavorites" resultType="java.util.Map">
        SELECT product_id, COUNT(*) as favorite_count
        FROM product_favorite
        GROUP BY product_id
        ORDER BY favorite_count DESC
        LIMIT #{limit}
    </select>

    <!-- 移动商品到指定收藏夹 -->
    <update id="moveToFolder">
        UPDATE product_favorite
        SET folder_id   = #{folderId},
            update_time = NOW()
        WHERE id = #{id}
    </update>

    <!-- 批量删除收藏 -->
    <delete id="batchDelete">
        DELETE FROM product_favorite
        WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <!-- 查询带商品信息的收藏列表 -->
    <select id="selectWithProductInfo" resultMap="FavoriteWithProductMap">
        SELECT f.*,
               p.name   as product_name,
               p.price  as product_price,
               p.images as product_image,
               p.status as product_status,
               p.stock  as product_stock
        FROM product_favorite f
                 LEFT JOIN products p ON f.product_id = p.id
        WHERE f.user_id = #{userId}
        ORDER BY f.create_time DESC
    </select>

    <!-- 带商品信息的收藏结果映射 -->
    <resultMap id="FavoriteWithProductMap" type="com.example.model.entity.ProductFavorite" extends="BaseResultMap">
        <result property="productName" column="product_name" jdbcType="VARCHAR"/>
        <result property="productPrice" column="product_price" jdbcType="DECIMAL"/>
        <result property="productImage" column="product_image" jdbcType="VARCHAR"/>
        <result property="productStatus" column="product_status" jdbcType="INTEGER"/>
        <result property="productStock" column="product_stock" jdbcType="INTEGER"/>
    </resultMap>

    <!-- 统计用户收藏夹及各收藏夹中商品数量 -->
    <select id="selectUserFolderStats" resultType="java.util.Map">
        SELECT folder_id,
               COUNT(*) as count
        FROM product_favorite
        WHERE user_id = #{userId}
        GROUP BY folder_id
    </select>
</mapper>
