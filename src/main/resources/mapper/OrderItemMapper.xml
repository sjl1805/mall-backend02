<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.OrderItemMapper">

    <resultMap id="BaseResultMap" type="com.example.model.entity.OrderItem">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="orderId" column="order_id" jdbcType="BIGINT"/>
        <result property="productId" column="product_id" jdbcType="BIGINT"/>
        <result property="productName" column="product_name" jdbcType="VARCHAR"/>
        <result property="productImage" column="product_image" jdbcType="VARCHAR"/>
        <result property="price" column="price" jdbcType="DECIMAL"/>
        <result property="quantity" column="quantity" jdbcType="INTEGER"/>
        <result property="totalAmount" column="total_amount" jdbcType="DECIMAL"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, order_id, product_id, product_name, product_image, price, quantity, total_amount, create_time, update_time
    </sql>

    <!-- 根据订单ID查询订单商品 -->
    <select id="selectByOrderId" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM order_item
        WHERE order_id = #{orderId}
    </select>

    <!-- 分页查询订单商品 -->
    <select id="selectPage" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM order_item
        ORDER BY create_time DESC
    </select>

    <!-- 根据ID查询订单商品 -->
    <select id="selectById" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM order_item
        WHERE id = #{id}
    </select>

    <!-- 插入新订单商品 -->
    <insert id="insertOrderItem" parameterType="com.example.model.entity.OrderItem">
        INSERT INTO order_item (order_id, product_id, product_name, product_image, price, quantity, total_amount, create_time, update_time)
        VALUES (#{orderId}, #{productId}, #{productName}, #{productImage}, #{price}, #{quantity}, #{totalAmount}, #{createTime}, #{updateTime})
    </insert>

    <!-- 更新订单商品信息 -->
    <update id="updateOrderItem" parameterType="com.example.model.entity.OrderItem">
        UPDATE order_item
        SET order_id = #{orderId},
            product_id = #{productId},
            product_name = #{productName},
            product_image = #{productImage},
            price = #{price},
            quantity = #{quantity},
            total_amount = #{totalAmount},
            update_time = #{updateTime}
        WHERE id = #{id}
    </update>

    <!-- 根据ID删除订单商品 -->
    <delete id="deleteOrderItem">
        DELETE FROM order_item WHERE id = #{id}
    </delete>
</mapper>
