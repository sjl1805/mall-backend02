<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.CategoryMapper">

    <!-- 基础结果映射 -->
    <resultMap id="BaseResultMap" type="com.example.model.entity.Category">
        <id column="id" property="id"/>
        <result column="parent_id" property="parentId"/>
        <result column="name" property="name"/>
        <result column="image" property="image"/>
        <result column="level" property="level"/>
        <result column="status" property="status"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <!-- 递归查询结果映射 -->
    <resultMap id="CategoryTreeMap" type="com.example.model.entity.Category" extends="BaseResultMap">
        <collection property="children" column="id" ofType="com.example.model.entity.Category" 
                    select="selectByParentId"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, parent_id, name, image, level, status, create_time, update_time
    </sql>

    <!-- 查询分类树 -->
    <select id="selectCategoryTree" resultMap="CategoryTreeMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM category
        WHERE parent_id IS NULL OR parent_id = 0
        ORDER BY id
    </select>

    <!-- 根据父ID查询子分类 -->
    <select id="selectByParentId" resultMap="CategoryTreeMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM category
        WHERE parent_id = #{parentId}
        ORDER BY id
    </select>

    <!-- 根据层级查询分类 -->
    <select id="selectByLevel" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM category
        WHERE level = #{level}
        ORDER BY id
    </select>

    <!-- 分页多条件查询分类 -->
    <select id="selectCategoryPage" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM category
        <where>
            <if test="params.keyword != null and params.keyword != ''">
                AND name LIKE CONCAT('%', #{params.keyword}, '%')
            </if>
            <if test="params.level != null">
                AND level = #{params.level}
            </if>
            <if test="params.parentId != null">
                AND parent_id = #{params.parentId}
            </if>
            <if test="params.status != null">
                AND status = #{params.status}
            </if>
        </where>
        ORDER BY 
        <choose>
            <when test="params.sortField != null and params.sortField != ''">
                ${params.sortField} 
                <if test="params.sortOrder != null and params.sortOrder == 'desc'">
                    DESC
                </if>
                <if test="params.sortOrder == null or params.sortOrder != 'desc'">
                    `ASC`
                </if>
            </when>
            <otherwise>
                level ASC, id ASC
            </otherwise>
        </choose>
    </select>

    <!-- 批量更新分类状态 -->
    <update id="batchUpdateStatus">
        UPDATE category
        SET status = #{status}
        WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <!-- 更新分类的父级 -->
    <update id="updateParent">
        UPDATE category
        SET parent_id = #{parentId}, level = #{level}
        WHERE id = #{id}
    </update>

    <!-- 统计各层级分类数量 -->
    <select id="countCategoryByLevel" resultType="java.util.Map">
        SELECT 
            level,
            COUNT(*) as count
        FROM category
        GROUP BY level
    </select>

    <!-- 获取分类路径 -->
    <select id="selectCategoryPath" resultMap="BaseResultMap">
        WITH RECURSIVE CategoryPath AS (SELECT *
                                        FROM category
                                        WHERE id = #{categoryId}
                                        UNION ALL
                                        SELECT c.*
                                        FROM category c,
                                             CategoryPath cp
                                        WHERE c.id = cp.parent_id)
        SELECT *
        FROM CategoryPath
        ORDER BY level
    </select>

    <!-- 查询所有启用状态的分类 -->
    <select id="selectAllEnabled" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM category
        WHERE status = 1
        ORDER BY level, id
    </select>

    <!-- 查询有商品关联的分类 -->
    <select id="selectCategoriesWithProducts" resultMap="BaseResultMap">
        SELECT DISTINCT c.*
        FROM category c
        INNER JOIN products p ON c.id = p.category_id
        WHERE c.status = 1
        ORDER BY c.level, c.id
    </select>

    <!-- 查询热门分类（根据关联商品数量） -->
    <select id="selectHotCategories" resultMap="BaseResultMap">
        SELECT c.*, COUNT(p.id) as product_count
        FROM category c
        INNER JOIN products p ON c.id = p.category_id
        WHERE c.status = 1
        GROUP BY c.id
        ORDER BY product_count DESC
        LIMIT #{limit}
    </select>

    <!-- 递归删除分类（包括所有子分类） -->
    <delete id="deleteWithChildren">
        WITH RECURSIVE CategoryTree AS (
            SELECT id
            FROM category
            WHERE id = #{categoryId}
            UNION ALL
            SELECT c.id
            FROM category c
            INNER JOIN CategoryTree ct ON c.parent_id = ct.id
        )
        DELETE FROM category
        WHERE id IN (SELECT id FROM CategoryTree)
    </delete>
    
    <!-- 检查分类名称是否存在 -->
    <select id="existsByNameAndParent" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM category
        WHERE name = #{name}
        AND parent_id = #{parentId}
    </select>
</mapper> 